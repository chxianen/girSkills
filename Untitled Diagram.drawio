<mxfile host="app.diagrams.net" modified="2022-05-17T02:29:27.785Z" agent="5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36" etag="Jt_1Su_UkFXZmevcG1yr" version="18.0.5" type="github">
  <diagram id="u_JkBs3wXPsKhqw9CX5n" name="Page-1">
    <mxGraphModel dx="2031" dy="2202" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="827" pageHeight="1169" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="1ttmHKTNPkpgTRW5egKZ-18" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;Registry&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;&gt;&lt;p style=&quot;margin:0px;margin-left:4px;&quot;&gt;- gauges: std::vector&amp;lt;&amp;lt;Family&amp;lt;Gauge&amp;gt;&amp;gt;&amp;gt;&lt;/p&gt;&lt;p style=&quot;margin:0px;margin-left:4px;&quot;&gt;- counters: std::vector&amp;lt;&amp;lt;Family&amp;lt;Counter&amp;gt;&amp;gt;&amp;gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin:0px;margin-left:4px;&quot;&gt;- histograms: std::vector&amp;lt;&amp;lt;Family&amp;lt;Histogram&amp;gt;&amp;gt;&amp;gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin:0px;margin-left:4px;&quot;&gt;- summaries: std::vector&amp;lt;&amp;lt;Family&amp;lt;Summary&amp;gt;&amp;gt;&amp;gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin:0px;margin-left:4px;&quot;&gt;- mutex: std::mutex&lt;/p&gt;&lt;hr size=&quot;1&quot;&gt;&lt;p style=&quot;margin:0px;margin-left:4px;&quot;&gt;&lt;/p&gt;+add(std::string name, std::string help, std::map&amp;lt;std::string, std::string&amp;gt; labels): Family&amp;lt;T&amp;gt;&lt;br&gt;+collect() const override： std::vector&amp;lt;MetircFamily&amp;gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=12;fontFamily=Helvetica;html=1;" parent="1" vertex="1">
          <mxGeometry x="327" y="312.5" width="500" height="150" as="geometry" />
        </mxCell>
        <mxCell id="1ttmHKTNPkpgTRW5egKZ-19" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;i&gt;&amp;lt;&amp;lt;Interface&amp;gt;&amp;gt;&lt;/i&gt;&lt;br&gt;&lt;b&gt;Collectable&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;margin:0px;margin-left:4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;&gt;&lt;p style=&quot;margin:0px;margin-left:4px;&quot;&gt;+ collect()： std::vector&amp;lt;MetircFamily&amp;gt;&lt;br&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=12;fontFamily=Helvetica;html=1;" parent="1" vertex="1">
          <mxGeometry x="760" y="100" width="215" height="80" as="geometry" />
        </mxCell>
        <mxCell id="1ttmHKTNPkpgTRW5egKZ-20" value="" style="endArrow=block;dashed=1;endFill=0;endSize=12;html=1;rounded=0;exitX=0.5;exitY=0;exitDx=0;exitDy=0;entryX=0.5;entryY=1;entryDx=0;entryDy=0;" parent="1" source="1ttmHKTNPkpgTRW5egKZ-18" target="1ttmHKTNPkpgTRW5egKZ-19" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="260" y="410" as="sourcePoint" />
            <mxPoint x="420" y="410" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="1ttmHKTNPkpgTRW5egKZ-22" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;Family&amp;lt;T&amp;gt;&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;&gt;&lt;p style=&quot;margin:0px;margin-left:4px;&quot;&gt;- name: const std::string;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin:0px;margin-left:4px;&quot;&gt;- help: const std::string;&lt;/p&gt;&lt;p style=&quot;margin:0px;margin-left:4px;&quot;&gt;- contantLabels:&amp;nbsp;const std::map&amp;lt;std::string, std::string&amp;gt;&lt;/p&gt;&lt;p style=&quot;margin:0px;margin-left:4px;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;- metrics: std::unordered_map&amp;lt;std::size_t, std::unique_ptr&amp;lt;T&amp;gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin:0px;margin-left:4px;&quot;&gt;- labels:&amp;nbsp;std::unordered_map&amp;lt;std::size_t, std::map&amp;lt;std::string, std::string&amp;gt;&amp;gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;&gt;&lt;p style=&quot;margin:0px;margin-left:4px;&quot;&gt;+ Family(&lt;span style=&quot;background-color: initial;&quot;&gt;const std::string&amp;amp; name,const std::string&amp;amp; help,&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;const std::map&amp;lt;std::string, std::string&amp;gt;&amp;amp; constantLabels&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;)&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin:0px;margin-left:4px;&quot;&gt;+ add(std::map&amp;lt;std::string, std::string&amp;gt; labels, Args&amp;amp;&amp;amp;... args):&amp;nbsp;T&amp;amp;&lt;/p&gt;&lt;p style=&quot;margin:0px;margin-left:4px;&quot;&gt;+ remove(T* metric): void&lt;/p&gt;&lt;p style=&quot;margin:0px;margin-left:4px;&quot;&gt;+ has(const std::map&amp;lt;std::string, std::string&amp;gt;&amp;amp; labels) const:&amp;nbsp; bool&lt;/p&gt;&lt;p style=&quot;margin:0px;margin-left:4px;&quot;&gt;+ getName() const:&amp;nbsp; const std::string&amp;amp;&lt;/p&gt;&lt;p style=&quot;margin:0px;margin-left:4px;&quot;&gt;+ collect() const override :&amp;nbsp;std::vector&amp;lt;MetricFamily&amp;gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin:0px;margin-left:4px;&quot;&gt;-&amp;nbsp; collectMetric(std::size_t hash, T* metric) :&amp;nbsp;ClientMetric&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=12;fontFamily=Helvetica;html=1;" parent="1" vertex="1">
          <mxGeometry x="900" y="280" width="620" height="215" as="geometry" />
        </mxCell>
        <mxCell id="1ttmHKTNPkpgTRW5egKZ-23" value="" style="endArrow=block;dashed=1;endFill=0;endSize=12;html=1;rounded=0;exitX=0.5;exitY=0;exitDx=0;exitDy=0;entryX=0.5;entryY=1;entryDx=0;entryDy=0;" parent="1" source="1ttmHKTNPkpgTRW5egKZ-22" target="1ttmHKTNPkpgTRW5egKZ-19" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="830" y="220" as="sourcePoint" />
            <mxPoint x="990" y="220" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="1ttmHKTNPkpgTRW5egKZ-24" value="" style="endArrow=diamondThin;endFill=1;endSize=24;html=1;rounded=0;entryX=1;entryY=0.5;entryDx=0;entryDy=0;exitX=0;exitY=0.5;exitDx=0;exitDy=0;" parent="1" source="1ttmHKTNPkpgTRW5egKZ-22" target="1ttmHKTNPkpgTRW5egKZ-18" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="667" y="510" as="sourcePoint" />
            <mxPoint x="827" y="510" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="1ttmHKTNPkpgTRW5egKZ-26" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;ClientMetric&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;&gt;&lt;p style=&quot;margin:0px;margin-left:4px;&quot;&gt;+ labels: std::vector&amp;lt;ClientMetric::Label&amp;gt;&lt;/p&gt;&lt;p style=&quot;margin:0px;margin-left:4px;&quot;&gt;+ gauge: ClientMetric::Gauge&lt;/p&gt;&lt;p style=&quot;margin:0px;margin-left:4px;&quot;&gt;+ millsecstamp:&amp;nbsp;std::int64_t&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=12;fontFamily=Helvetica;html=1;" parent="1" vertex="1">
          <mxGeometry x="1620" y="347.5" width="230" height="80" as="geometry" />
        </mxCell>
        <mxCell id="1ttmHKTNPkpgTRW5egKZ-27" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;Label&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;&gt;&lt;p style=&quot;margin:0px;margin-left:4px;&quot;&gt;+ name: std::string&lt;/p&gt;&lt;p style=&quot;margin:0px;margin-left:4px;&quot;&gt;+ value: std::string&lt;/p&gt;&lt;p style=&quot;margin:0px;margin-left:4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=12;fontFamily=Helvetica;html=1;" parent="1" vertex="1">
          <mxGeometry x="1655" y="470" width="160" height="65" as="geometry" />
        </mxCell>
        <mxCell id="1ttmHKTNPkpgTRW5egKZ-28" value="" style="endArrow=diamondThin;endFill=1;endSize=24;html=1;rounded=0;entryX=0.5;entryY=1;entryDx=0;entryDy=0;exitX=0.5;exitY=0;exitDx=0;exitDy=0;" parent="1" source="1ttmHKTNPkpgTRW5egKZ-27" target="1ttmHKTNPkpgTRW5egKZ-26" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="1740" y="470" as="sourcePoint" />
            <mxPoint x="1720" y="460" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="1ttmHKTNPkpgTRW5egKZ-30" value="" style="endArrow=open;endFill=1;endSize=12;html=1;rounded=0;exitX=0;exitY=0.5;exitDx=0;exitDy=0;entryX=1;entryY=0.5;entryDx=0;entryDy=0;" parent="1" source="1ttmHKTNPkpgTRW5egKZ-26" target="1ttmHKTNPkpgTRW5egKZ-22" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="1470" y="390" as="sourcePoint" />
            <mxPoint x="1630" y="390" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="1ttmHKTNPkpgTRW5egKZ-31" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;MetricExposer&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;&gt;&lt;p style=&quot;margin:0px;margin-left:4px;&quot;&gt;- bindAddr: std::string&lt;/p&gt;&lt;p style=&quot;margin:0px;margin-left:4px;&quot;&gt;-&amp;nbsp;numThreads:&amp;nbsp;std::size_t&lt;/p&gt;&lt;p style=&quot;margin:0px;margin-left:4px;&quot;&gt;-&amp;nbsp;endpoints:&amp;nbsp;std::vector&amp;lt;std::shared_ptr&amp;lt;Endpoint&amp;gt;&amp;gt;&lt;/p&gt;&lt;p style=&quot;margin:0px;margin-left:4px;&quot;&gt;-&amp;nbsp;metricServer:&amp;nbsp;std::shared_ptr&amp;lt;served::net::server&amp;gt;&lt;/p&gt;&lt;p style=&quot;margin:0px;margin-left:4px;&quot;&gt;-&amp;nbsp;multiplexer:&amp;nbsp;served::multiplexer&lt;/p&gt;&lt;hr size=&quot;1&quot;&gt;&lt;p style=&quot;margin:0px;margin-left:4px;&quot;&gt;+ MetricExposer(const std::string&amp;amp; bindAddr,const std::size_t numThread = 2)&lt;/p&gt;&lt;p style=&quot;margin:0px;margin-left:4px;&quot;&gt;+ registerUri(const std::string uri): std::shared_ptr&amp;lt;Endpoint&amp;gt;&lt;/p&gt;&lt;p style=&quot;margin:0px;margin-left:4px;&quot;&gt;+ expose(): void&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin:0px;margin-left:4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin:0px;margin-left:4px;&quot;&gt;&lt;br&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=12;fontFamily=Helvetica;html=1;" parent="1" vertex="1">
          <mxGeometry x="327" y="-270" width="460" height="165" as="geometry" />
        </mxCell>
        <mxCell id="1ttmHKTNPkpgTRW5egKZ-32" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;Endpoint&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;&gt;&lt;p style=&quot;margin:0px;margin-left:4px;&quot;&gt;+ field: Type&lt;/p&gt;&lt;hr size=&quot;1&quot;&gt;&lt;p style=&quot;margin:0px;margin-left:4px;&quot;&gt;+ Endpoint(std::string uri, served::multiplexer&amp;amp; plexer)&lt;/p&gt;&lt;p style=&quot;margin:0px;margin-left:4px;&quot;&gt;+ registerHandler(std::shared_ptr&amp;lt;MetricsHandler&amp;gt;):&amp;nbsp;Endpoint&amp;amp;&lt;/p&gt;&lt;p style=&quot;margin:0px;margin-left:4px;&quot;&gt;+&amp;nbsp;registerCollectable(const std::weak_ptr&amp;lt;Collectable&amp;gt;&amp;amp; collectable):&amp;nbsp;void&lt;/p&gt;&lt;p style=&quot;margin:0px;margin-left:4px;&quot;&gt;+&amp;nbsp;removeCollectable(const std::weak_ptr&amp;lt;Collectable&amp;gt;&amp;amp; collectable): void&lt;/p&gt;&lt;p style=&quot;margin:0px;margin-left:4px;&quot;&gt;+&amp;nbsp;getURI() const : std::string&amp;nbsp;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=12;fontFamily=Helvetica;html=1;" parent="1" vertex="1">
          <mxGeometry x="327" y="-85" width="420" height="140" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
</mxfile>
